const cartDemo = [
    { id: 1, name: "Tr√† s·ªØa tr√¢n ch√¢u", price: 25000, quantity: 2, image: "https://i.pinimg.com/736x/03/f6/fb/03f6fb4d51076c1d5b29657c5053907b.jpg" },
    { id: 2, name: "B√°nh flan caramel", price: 15000, quantity: 1, image: "https://i.pinimg.com/736x/a9/ba/01/a9ba012483016f38a5e0fe2443e254aa.jpg" },
    { id: 3, name: "C√† ph√™ s·ªØa ƒë√°", price: 20000, quantity: 1, image: "https://i.pinimg.com/736x/0a/34/4c/0a344cfabbe54777fb3b1ff22405507c.jpg" }
];

// tr·∫°ng th√°i voucher
let appliedVouchers = {
  SAVE20: false,
  FREE50: false
};

const shippingFeeDefault = 10000; // ph√≠ chu·∫©n
let shippingFee = shippingFeeDefault; // s·∫Ω thay ƒë·ªïi n·∫øu FREE50 ƒë∆∞·ª£c √°p

// helper: t√≠nh subtotal hi·ªán t·∫°i
function calculateSubtotal() {
  return cartDemo.reduce((sum, item) => sum + item.price * item.quantity, 0);
}

/* ===== Render gi·ªè h√†ng ===== */
function renderCart() {
    const cartList = document.getElementById("cartList");
    cartList.innerHTML = "";

    cartDemo.forEach(item => {
        cartList.innerHTML += `
        <div class="cart-item">
            <img src="${item.image}" alt="${item.name}" class="item-img">
            <div class="item-info">
                <div class="item-name">${item.name}</div>
                <div class="item-price">${item.price.toLocaleString()} VND</div>
            </div>

            <div class="item-quantity">
                <button onclick="changeQuantity(${item.id}, -1)">-</button>
                <input type="number" value="${item.quantity}" min="1" onchange="manualQuantity(${item.id}, this.value)">
                <button onclick="changeQuantity(${item.id}, 1)">+</button>
            </div>

            <div class="item-remove" onclick="removeItem(${item.id})">üóëÔ∏è</div>
        </div>
        `;
    });

    updateSummary(); // d√πng subtotal n·ªôi b·ªô
}

/* ===== C·∫≠p nh·∫≠t t·ªïng ===== */
function updateSummary() {
    const subtotal = calculateSubtotal();

    // n·∫øu SAVE20 ƒëang b·∫≠t -> t√≠nh discount = 20% * subtotal, ng∆∞·ª£c l·∫°i 0
    const discountValue = appliedVouchers.SAVE20 ? Math.round(subtotal * 0.2) : 0;

    // ph√≠ ship theo tr·∫°ng th√°i FREE50
    const currentShipping = appliedVouchers.FREE50 ? 0 : shippingFeeDefault;

    const total = subtotal + currentShipping - discountValue;

    document.getElementById("subtotal").textContent = subtotal.toLocaleString() + " VND";
    document.getElementById("shipping").textContent = currentShipping.toLocaleString() + " VND";
    document.getElementById("discount").textContent = discountValue.toLocaleString() + " VND";
    document.getElementById("total").textContent = total.toLocaleString() + " VND";

    // (tu·ª≥ ch·ªçn) c·∫≠p nh·∫≠t tr·∫°ng th√°i n√∫t voucher (th√™m class .active n·∫øu mu·ªën)
    updateVoucherUI();
}

/* ===== Thay ƒë·ªïi s·ªë l∆∞·ª£ng ===== */
function changeQuantity(id, delta) {
    const item = cartDemo.find(p => p.id === id);
    if (!item) return;

    item.quantity = Math.max(1, item.quantity + delta);
    renderCart();
}

/* ===== Nh·∫≠p s·ªë l∆∞·ª£ng th·ªß c√¥ng ===== */
function manualQuantity(id, newQty) {
    const item = cartDemo.find(p => p.id === id);
    if (!item) return;

    item.quantity = Math.max(1, parseInt(newQty) || 1);
    renderCart();
}

/* ===== X√≥a s·∫£n ph·∫©m ===== */
function removeItem(id) {
    const index = cartDemo.findIndex(p => p.id === id);
    if (index !== -1) {
        if (confirm("B·∫°n c√≥ ch·∫Øc b·ªè m√≥n n√†y kh·ªèi danh s√°ch ? ")) {
            cartDemo.splice(index, 1);
            renderCart();
        }
    }
}

/* ===== √Åp d·ª•ng / b·ªè voucher (toggle) ===== */
function applyVoucher(code) {
    const subtotal = calculateSubtotal();

    if (code === "SAVE20") {
        // ch·ªâ b·∫≠t/t·∫Øt SAVE20; kh√¥ng ·∫£nh h∆∞·ªüng FREE50
        if (appliedVouchers.SAVE20) {
            appliedVouchers.SAVE20 = false;
            alert("ƒê√£ h·ªßy m√£ SAVE20.");
        } else {
            // n·∫øu mu·ªën ki·ªÉm tra ƒëi·ªÅu ki·ªán (v√≠ d·ª• subtotal t·ªëi thi·ªÉu), l√†m ·ªü ƒë√¢y
            appliedVouchers.SAVE20 = true;
            alert("√Åp d·ª•ng SAVE20 th√†nh c√¥ng! Gi·∫£m 20% t·ªïng ƒë∆°n h√†ng.");
        }
    } else if (code === "FREE50") {
        // ch·ªâ b·∫≠t/t·∫Øt FREE50; kh√¥ng ·∫£nh h∆∞·ªüng SAVE20
        if (appliedVouchers.FREE50) {
            appliedVouchers.FREE50 = false;
            alert("ƒê√£ h·ªßy m√£ FREE50 (mi·ªÖn ph√≠ v·∫≠n chuy·ªÉn).");
        } else {
            appliedVouchers.FREE50 = true;
            alert("√Åp d·ª•ng FREE50 th√†nh c√¥ng! Mi·ªÖn ph√≠ v·∫≠n chuy·ªÉn.");
        }
    }

    updateSummary();
}

/* ===== C·∫≠p nh·∫≠t UI cho voucher (tu·ª≥ ch·ªçn) ===== */
function updateVoucherUI() {
    // n·∫øu mu·ªën highlight voucher ƒëang b·∫≠t, th√™m data-code v√†o HTML voucher-item:
    // <div class="voucher-item" data-code="SAVE20" onclick="applyVoucher('SAVE20')">...
    // r·ªìi c·∫≠p nh·∫≠t class .active d∆∞·ªõi ƒë√¢y:
    const els = document.querySelectorAll('.voucher-item[data-code]');
    els.forEach(el => {
        const code = el.getAttribute('data-code');
        if (appliedVouchers[code]) el.classList.add('active');
        else el.classList.remove('active');
    });
}

/* ===== Thanh to√°n ===== */
function checkout() {
    alert("Demo Demo Demo. G√¨ quan  tr·ªçng nh·∫Øc 3 l·∫ßn =))))");
}

renderCart();
